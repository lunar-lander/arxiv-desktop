/* Paper Viewer Styles */
.viewerContainer {
  display: flex;
  flex-direction: column;
  height: 100%;
  background: var(--background);
}

.viewerHeader {
  background: var(--surface);
  padding: 1rem;
  border-bottom: 1px solid var(--border);
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
  flex-wrap: wrap;
}

.paperInfo {
  flex: 1;
  min-width: 0;
}

.paperTitle {
  margin: 0 0 0.5rem 0;
  color: var(--text);
  font-size: 1.3rem;
  font-weight: 600;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  line-height: 1.4;
}

.paperMeta {
  color: var(--text-secondary);
  font-size: 0.9rem;
}

.allControls {
  display: flex;
  align-items: center;
  gap: 1rem;
  flex-wrap: wrap;
}

.pdfControls {
  display: flex;
  align-items: center;
  gap: 1rem;
  flex-wrap: wrap;
}

.pageControls {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: var(--text);
}

.pageInfo {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  font-size: 0.9rem;
}

.pageTotal {
  color: var(--text-secondary);
  font-size: 0.9rem;
}

.zoomControls {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.zoomLevel {
  min-width: 50px;
  text-align: center;
  color: var(--text-secondary);
  font-size: 0.9rem;
}

.controlButton {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
  border: 1px solid var(--border);
  background: var(--surface);
  border-radius: 4px;
  cursor: pointer;
  color: var(--text);
  transition: all 0.2s;
  min-width: 32px;
  height: 32px;
}

.controlButton:hover {
  background: var(--secondary);
  border-color: var(--primary);
}

.controlButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.viewerActions {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  flex-wrap: wrap;
}

.actionButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border: 1px solid var(--border);
  background: var(--surface);
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.9rem;
  color: var(--text);
  transition: all 0.2s;
}

.actionButton:hover {
  background: var(--secondary);
  border-color: var(--primary);
}

.actionButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}


.pageInput {
  width: 60px;
  padding: 0.25rem 0.5rem;
  border: 1px solid var(--border);
  border-radius: 4px;
  text-align: center;
  background: var(--background);
  color: var(--text);
}

.pdfContainer {
  flex: 1;
  overflow: auto;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  padding: 1rem;
  background: var(--background);
}

.pdfWrapper {
  background: white;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

[data-theme="dark"] .pdfWrapper {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

.pageContainer {
  background: white;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  border-radius: 4px;
  overflow: hidden;
  margin-bottom: 1rem;
}

[data-theme="dark"] .pageContainer {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

.loadingState {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 300px;
  color: var(--text-secondary);
  font-size: 1.1rem;
}

.errorState {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 300px;
  color: #e74c3c;
  text-align: center;
  gap: 1rem;
}

.errorState p {
  margin: 0;
  font-size: 1.1rem;
}

/* Text layer styles for PDF.js */
.pdfWrapper :global(.react-pdf__Page__textContent) {
  user-select: text;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
}

.pdfWrapper :global(.react-pdf__Page__textContent > span) {
  color: transparent;
  position: absolute;
  font-family: sans-serif;
  white-space: pre;
  cursor: text;
  transform-origin: 0% 0%;
}

.pdfWrapper :global(.react-pdf__Page__textContent > span::selection) {
  background: rgba(0, 123, 255, 0.3);
}

.pdfWrapper :global(.react-pdf__Page__textContent > span::-moz-selection) {
  background: rgba(0, 123, 255, 0.3);
}

/* Ensure text selection works in different themes */
.pdfWrapper :global(.react-pdf__Page__textContent) {
  z-index: 1;
}

.pdfWrapper :global(.react-pdf__Page__canvas) {
  z-index: 0;
}

/* Floating copy button */
.copyButton {
  position: fixed;
  background: var(--primary);
  color: white;
  border: none;
  border-radius: 6px;
  padding: 0.5rem 0.75rem;
  font-size: 0.875rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  transform: translateX(-50%);
  transition: all 0.2s;
  z-index: 1000;
}

.copyButton:hover {
  background: var(--primary-hover);
  transform: translateX(-50%) translateY(-2px);
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
}

.copyButton:active {
  transform: translateX(-50%) translateY(0);
}
